Weekend Hours Worked The times that employees log in and out are recorded over the course of a month. For each employee, determine the number of hours worked during the weekends. 
For simplicity, hours worked in a day, hours are truncated to their integer part. For example, there are 10 hours between '2000 : 01 : 01 00:45:00' and '2000 : 01 : 01 10:45:00'. 
There are 9 hours between '2000 : 01 : 01 00:46:00' and '2000 : 01 : 01 10:45:00'. Return a list of employee ids and weekend hours worked, descending by hours worked. 
Schema You are provided 1 table : attendance. attendance Name Туре timestamp varchar(20) emp_id int Description date and time at which the employee logged in or logged out unique id of the employee. 

Sample Data Tables
 
attendance
timestamp	          emp_id
2021-07-01 08:08:00	747
2021-07-01 17:19:00	747
2021-07-02 08:15:00	747
2021-07-02 16:56:00	747
2021-07-03 08:36:00	747
2021-07-03 17:40:00	747
2021-07-04 08:37:00	747
2021-07-04 17:38:00	747
2021-07-05 08:06:00	747
2021-07-05 17:09:00	747
2021-07-06 08:53:00	747
2021-07-06 16:30:00	747
2021-07-07 08:22:00	747
2021-07-07 16:26:00	747
2021-07-08 08:34:00	747
2021-07-08 16:39:00	747
2021-07-09 08:22:00	747
2021-07-09 17:22:00	747
2021-07-10 08:33:00	747
2021-07-10 17:54:00	747
2021-07-11 08:13:00	747
2021-07-11 16:31:00	747
2021-07-12 08:44:00	747
2021-07-12 16:25:00	747
2021-07-13 08:09:00	747
2021-07-13 17:48:00	747
2021-07-14 08:21:00	747
2021-07-14 17:02:00	747
2021-07-15 08:49:00	747
2021-07-15 17:37:00	747
2021-07-16 08:27:00	747
2021-07-16 17:30:00	747
2021-07-17 08:14:00	747
2021-07-17 17:28:00	747
2021-07-18 08:01:00	747
2021-07-18 16:27:00	747
2021-07-19 08:10:00	747
2021-07-19 17:15:00	747
2021-07-20 08:57:00	747
2021-07-20 16:48:00	747
2021-07-21 08:38:00	747
2021-07-21 16:09:00	747
2021-07-22 08:06:00	747
2021-07-22 16:54:00	747
2021-07-23 08:34:00	747
2021-07-23 16:46:00	747
2021-07-24 08:24:00	747
2021-07-24 16:32:00	747
2021-07-25 08:52:00	747
2021-07-25 16:10:00	747
2021-07-26 08:32:00	747
2021-07-26 16:16:00	747
2021-07-27 08:23:00	747
2021-07-27 17:59:00	747
2021-07-28 08:55:00	747
2021-07-28 17:45:00	747
2021-07-29 08:45:00	747
2021-07-29 16:17:00	747
2021-07-30 08:12:00	747
2021-07-30 16:09:00	747
2021-07-31 08:01:00	747
2021-07-31 17:54:00	747
 

OUTPUT
emp_id	work_hours
747	    67
 

Explanation

Weekends 		Hours
(Saturday and Sunday)
2021-07-03 08:36:00
2021-07-03 17:40:00 	9
2021-07-04 08:37:00
2021-07-04 17:38:00 	9

2021-07-10 08:33:00
2021-07-10 17:54:00 	9
2021-07-11 08:13:00
2021-07-11 16:31:00 	8

2021-07-17 08:14:00
2021-07-17 17:28:00 	9
2021-07-18 08:01:00
2021-07-18 16:27:00 	8

2021-07-24 08:24:00
2021-07-24 16:32:00 	8
2021-07-25 08:52:00
2021-07-25 16:10:00 	7

Solution(MySQL):

WITH hours_worked AS (
    SELECT
        emp_id,
        CASE 
            WHEN MINUTE(TIMESTAMP) >= MINUTE(LAG(TIMESTAMP) OVER(PARTITION BY CAST(TIMESTAMP AS DATE), emp_id ORDER BY TIMESTAMP)) THEN 
                HOUR(TIMESTAMP) - HOUR(LAG(TIMESTAMP) OVER(PARTITION BY CAST(TIMESTAMP AS DATE), emp_id ORDER BY TIMESTAMP))
            ELSE 
                HOUR(TIMESTAMP) - HOUR(LAG(TIMESTAMP) OVER(PARTITION BY CAST(TIMESTAMP AS DATE), emp_id ORDER BY TIMESTAMP)) - 1
        END AS hours
    FROM
        attendance
    WHERE
        DAYOFWEEK(TIMESTAMP) IN (1, 7)
)
SELECT
    emp_id,
    SUM(hours) AS work_hours
FROM
    hours_worked
GROUP BY
    emp_id
ORDER BY
    work_hours DESC;

